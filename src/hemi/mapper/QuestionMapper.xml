<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hemi.dao.QuestionDao">
    <select id="selectByid" parameterType="int" resultType="hemi.pojo.Question">
        select * from question where id=#{id}
    </select>
    <select id="selectBycode" parameterType="String" resultType="hemi.pojo.Question">
        select * from question where qcode=#{qcode}
    </select>
    <select id="selectByDepart" parameterType="int" resultType="hemi.pojo.Question">
        select * from question where depart=#{depart} AND reply is not null AND isprivate is null
    </select>
    <select id="selectByDepart3" parameterType="int" resultType="hemi.pojo.Question">
        select * from question where depart=#{depart} AND reply is null
    </select>
    <select id="selectByDepart2" parameterType="int" resultType="hemi.pojo.Question">
        select * from question where depart=#{depart}
    </select>
    <select id="selectAll" parameterType="hemi.pojo.Page" resultType="hemi.pojo.Question">
        select * from question where reply is not null AND isprivate is null ORDER BY intime DESC limit #{begin},#{size}
    </select>
    <select id="selectByHit"  resultType="hemi.pojo.Question">
        select * from question order by hit desc limit 0,10
    </select>
    
    <select id="search" parameterType="String" resultType="hemi.pojo.Question">
        select * from question where 
	        reply is not null 
	        AND isprivate is null  
	        AND title like #{keyword} 
	        or content like #{keyword} 
    </select>
    
   <update id="update" parameterType="hemi.pojo.Question">
   UPDATE question SET depart=#{depart},retime=#{retime},hit=#{hit},reply=#{reply},process=#{process},isprivate=#{isprivate} WHERE id=#{id}
   </update>
   <insert id="insert" parameterType="hemi.pojo.Question">
   INSERT INTO question(name,depart,intime,hit,title,content,qcode,email,phone)VALUES(#{name},#{depart},#{intime},0,#{title},#{content},#{qcode},#{email},#{phone}) 
   </insert>
   <delete id="delete" parameterType="hemi.pojo.Question">
   delete from question where id=#{id}
   </delete>
   <select id="order" resultType="hemi.pojo.Sort">
     select depart.id,
      depart.name,
      COUNT(question.depart) as num
       FROM 
       depart,question 
       where question.depart=depart.id  
       GROUP BY depart.id 
       ORDER by count(question.depart) DESC
   </select>
   <select id="getCount" resultType="Integer">
   select count(id) from question
   </select>
</mapper>